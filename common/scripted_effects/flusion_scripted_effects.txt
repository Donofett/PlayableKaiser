pki_create_flusion_nations = {
	event_target:pki_flusion_planet = {
		inline_script = {
			script = pki/pki_country_species_creation
			COUNTRY = ATA
			CLASS = MAM
			PORTRAIT = rep5
			TRAITS = "
				trait = trait_pc_continental_preference
				trait = trait_traditional
				trait = trait_intelligent
			"
		}

		inline_script = {
			script = pki/pki_country_species_creation
			COUNTRY = CYA
			CLASS = MAM
			PORTRAIT = mam14
			TRAITS = "
				trait = trait_pc_continental_preference
				trait = trait_strong
			"
		}

		inline_script = {
			script = pki/pki_country_species_creation
			COUNTRY = DTC
			CLASS = HUM
			PORTRAIT = humanoid_03
			TRAITS = "
				trait = trait_pc_continental_preference
				trait = trait_strong
			"
		}

		inline_script = {
			script = pki/pki_country_species_creation
			COUNTRY = HAR
			CLASS = HUM
			PORTRAIT = humanoid_05
			TRAITS = "
				trait = trait_pc_continental_preference
				trait = trait_intelligent
				trait = trait_decadent
			"
		}

		create_species = {
			name = "NAME_GTA_SPECIES"
			plural = "NAME_GTA_SPECIES_PLURAL"
			class = FUN
			portrait = fun1
			homeworld = this
			traits = {
				trait = trait_pc_continental_preference
				trait = trait_delicious
				trait = trait_erudite
				trait = trait_wasteful
			}
			effect = {
				save_global_event_target_as = pki_GTA_species
			}
		}

		create_species = {
			name = "NAME_KRO_SPECIES"
			plural = "NAME_KRO_SPECIES_PLURAL"
			class = ART
			portrait = art15
			homeworld = this
			traits = {
				trait = trait_pc_continental_preference
				trait = trait_industrious
				trait = trait_rapid_breeders
				trait = trait_sedentary
				trait = trait_repugnant
			}
			effect = {
				save_global_event_target_as = pki_KRO_species
			}
		}

		create_species = {
			name = "NAME_MER_SPECIES"
			plural = "NAME_MER_SPECIES_PLURAL"
			class = PLANT
			portrait = pla14
			homeworld = this
			traits = {
				trait = trait_pc_continental_preference
				trait = trait_intelligent
				trait = trait_sedentary
				trait = trait_wasteful
			}
			effect = {
				save_global_event_target_as = pki_MER_species
			}
		}

		create_species = {
			name = "NAME_LAU_SPECIES"
			plural = "NAME_LAU_SPECIES_PLURAL"
			class = REP
			portrait = rep8
			homeworld = this
			traits = {
				trait = trait_pc_continental_preference
				trait = trait_rapid_breeders
			}
			effect = {
				save_global_event_target_as = pki_LAU_species
			}
		}

		create_species = {
			name = "NAME_LIN_SPECIES"
			plural = "NAME_LIN_SPECIES_PLURAL"
			class = AVI
			portrait = avi11
			homeworld = this
			traits = {
				trait = trait_pc_continental_preference
				trait = trait_talented
				trait = trait_traditional
				trait = trait_decadent
			}
			effect = {
				save_global_event_target_as = pki_LIN_species
			}
		}

		create_species = {
			name = "NAME_PFL_SPECIES"
			plural = "NAME_PFL_SPECIES_PLURAL"
			class = FUN
			portrait = fun11
			homeworld = this
			traits = {
				trait = trait_pc_continental_preference
				trait = trait_strong
				trait = trait_nomadic
			}
			effect = {
				save_global_event_target_as = pki_PFL_species
			}
		}

		create_species = {
			name = "NAME_RAV_SPECIES"
			plural = "NAME_RAV_SPECIES_PLURAL"
			class = HUM
			portrait = humanoid_hp_01
			homeworld = this
			traits = {
				trait = trait_pc_continental_preference
				trait = trait_intelligent
				trait = trait_sedentary
				trait = trait_wasteful
			}
			effect = {
				save_global_event_target_as = pki_RAV_species
			}
		}

		create_species = {
			name = "NAME_ROQ_SPECIES"
			plural = "NAME_ROQ_SPECIES_PLURAL"
			class = HUM
			portrait = human
			homeworld = this
			traits = {
				trait = trait_pc_continental_preference
				trait = trait_intelligent
				trait = trait_charismatic
				trait = trait_resilient
				trait = trait_wasteful
			}
			effect = {
				save_global_event_target_as = pki_ROQ_species
			}
		}

		#Yinjites
		create_species = {
			name = "NAME_YIN_SPECIES"
			plural = "NAME_YIN_SPECIES_PLURAL"
			class = HUM
			portrait = humanoid_hp_09
			homeworld = this
			traits = {
				trait = trait_pc_continental_preference
				trait = trait_industrious
				trait = trait_sedentary
			}
			effect = {
				save_global_event_target_as = pki_YIN_species
			}
		}
		#Ezics
		create_species = {
			name = "NAME_ZUS_SPECIES"
			plural = "NAME_ZUS_SPECIES_PLURAL"
			class = REP
			portrait = rep10
			homeworld = this
			traits = {
				trait = trait_pc_continental_preference
				trait = trait_venerable
				trait = trait_adaptive
				trait = trait_strong
				trait = trait_slow_learners
				trait = trait_quarrelsome
				trait = trait_slow_breeders
			}
			effect = {
				save_global_event_target_as = pki_ZUS_species
			}
		}
	}
	#Create Flusion Nations

	inline_script = {
		script = pki/pki_inline_script
		SCRIPT_NAME = country_creation
	}

	event_target:pki_ATA_country = {
		change_government = {
			authority = auth_democratic
		}
		country_add_ethic = ethic_xenophile
		country_add_ethic = ethic_spiritualist
		country_add_ethic = ethic_pacifist
		change_country_flag = {
			icon = {
				category = "spherical"
				file = "flag_spherical_9.dds"
			}
			background = {
				category = "backgrounds"
				file = "diagonal.dds"
			}
			colors = {
				intense_blue
				mist_blue
			}
		}
		room_name_override = ""
	}
}

flusion_conversion_effect_step_1 = {
	#City districts
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_city
		}
		variable = city_count
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_hive
		}
		variable = hive_count
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_nexus
		}
		variable = nexus_count
	}

	#Industrial
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_industrial
		}
		variable = industrial_count
	}

	#Mining
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_mining
		}
		variable = mining_count
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_mining_uncapped
		}
		variable = mining_u_count
	}

	#Farming
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_farming
		}
		variable = farm_count
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_farming_uncapped
		}
		variable = farm_u_count
	}
}

flusion_conversion_effect_step_2 = {
	#City
	while = {
		count = city_count
		add_district = district_flusion_city
	}
	clear_variable = city_count
	while = {
		count = hive_count
		add_district = district_flusion_city
	}
	clear_variable = hive_count
	while = {
		count = nexus_count
		add_district = district_flusion_city
	}
	clear_variable = nexus_count

	#Industry
	while = {
		count = industrial_count
		add_district = district_flusion_heavy_industry
	}
	clear_variable = industrial_count

	#Mine
	while = {
		count = mining_count
		add_district = district_flusion_mining
	}
	clear_variable = mining_count
	while = {
		count = mining_u_count
		add_district = district_flusion_mining
	}
	clear_variable = mining_u_count

	#Farm
	while = {
		count = farm_count
		add_district = district_flusion_farming
	}
	clear_variable = farm_count
	while = {
		count = farm_u_count
		add_district = district_flusion_farming
	}
	clear_variable = farm_u_count
}

player_flusion_unify_flusion = {
	event_target:pki_flusion_planet = {
		remove_deposit = d_flunat
		every_planet_army = {
			limit = {
				owner = {
					OR = {
						is_country_type = flusion_nation
						is_country_type = flusion_coalition
					}
				}
			}
			remove_army = yes
		}
		while = {
			count = 10
			remove_deposit = d_annexed_region_solak
		}
		while = {
			count = 10
			remove_deposit = d_annexed_region_cookie
		}
		while = {
			count = 10
			remove_deposit = d_annexed_region_kronk
		}
		while = {
			count = 10
			remove_deposit = d_annexed_region_ravka
		}
		while = {
			count = 10
			remove_deposit = d_annexed_region_droog
		}
		while = {
			count = 10
			remove_deposit = d_annexed_region_zousa
		}
		if = {
			limit = { event_target:pki_player = { NOT = { has_country_flag = solak_pop_acquired } } }
			while = {
				count = 5
				create_pop = {
					species = event_target:solakians
				}
				last_created_pop = {
					add_modifier = {
						modifier = "pop_recently_conquered"
						days = 3600
					}
				}
			}
			planet.owner = {
				set_country_flag = solak_pop_acquired
			}
		}
		if = {
			limit = { event_target:pki_player = { NOT = { has_country_flag = cookie_pop_acquired } } }
			while = {
				count = 4
				create_pop = {
					species = event_target:cookians
				}
				last_created_pop = {
					add_modifier = {
						modifier = "pop_recently_conquered"
						days = 3600
					}
				}
			}
			planet.owner = {
				set_country_flag = cookie_pop_acquired
			}
		}
		if = {
			limit = { event_target:pki_player = { NOT = { has_country_flag = kronk_pop_acquired } } }
			while = {
				count = 3
				create_pop = {
					species = event_target:kronks
				}
				last_created_pop = {
					add_modifier = {
						modifier = "pop_recently_conquered"
						days = 3600
					}
				}
			}
			planet.owner = {
				set_country_flag = kronk_pop_acquired
			}
		}
		if = {
			limit = { event_target:pki_player = { NOT = { has_country_flag = ravka_pop_acquired } } }
			while = {
				count = 2
				create_pop = {
					species = event_target:ravkans
				}
				last_created_pop = {
					add_modifier = {
						modifier = "pop_recently_conquered"
						days = 3600
					}
				}
			}
			planet.owner = {
				set_country_flag = ravka_pop_acquired
			}
		}
		if = {
			limit = { event_target:pki_player = { NOT = { has_country_flag = zousa_pop_acquired } } }
			while = {
				count = 1
				create_pop = {
					species = event_target:zousans
				}
				last_created_pop = {
					add_modifier = {
						modifier = "pop_recently_conquered"
						days = 3600
					}
				}
			}
			planet.owner = {
				set_country_flag = zousa_pop_acquired
			}
		}
		if = {
			limit = { event_target:pki_player = { NOT = { has_country_flag = droog_pop_acquired } } }
			while = {
				count = 1
				create_pop = {
					species = event_target:droog
				}
				last_created_pop = {
					add_modifier = {
						modifier = "pop_recently_conquered"
						days = 3600
					}
				}
			}
			planet.owner = {
				set_country_flag = droog_pop_acquired
			}
		}
		if = {
			limit = { event_target:pki_player = { NOT = { has_country_flag = ezic_pop_acquired } } }
			while = {
				count = 2
				create_pop = {
					species = event_target:ezics
				}
				last_created_pop = {
					add_modifier = {
						modifier = "pop_recently_conquered"
						days = 3600
					}
				}
			}
			planet.owner = {
				set_country_flag = ezic_pop_acquired
			}
		}
		if = {
			limit = { event_target:pki_player = { NOT = { has_country_flag = mercuria_pop_acquired } } }
			while = {
				count = 1
				create_pop = {
					species = event_target:mercurians
				}
				last_created_pop = {
					add_modifier = {
						modifier = "pop_recently_conquered"
						days = 3600
					}
				}
			}
			planet.owner = {
				set_country_flag = mercuria_pop_acquired
			}
		}
		if = {
			limit = { event_target:pki_player = { NOT = { has_country_flag = cyatianala_pop_acquired } } }
			while = {
				count = 1
				create_pop = {
					species = event_target:mercurians
				}
				last_created_pop = {
					add_modifier = {
						modifier = "pop_recently_conquered"
						days = 3600
					}
				}
			}
			planet.owner = {
				set_country_flag = cyatianala_pop_acquired
			}
		}
		if = {
			limit = { event_target:pki_player = { NOT = { has_country_flag = yinja_pop_acquired } } }
			while = {
				count = 3
				create_pop = {
					species = event_target:yinjites
				}
				last_created_pop = {
					add_modifier = {
						modifier = "pop_recently_conquered"
						days = 3600
					}
				}
			}
			planet.owner = {
				set_country_flag = yinja_pop_acquired
			}
		}
		if = {
			limit = { event_target:pki_player = { NOT = { has_country_flag = symbie_pop_acquired } } }
			while = {
				count = 2
				create_pop = {
					species = event_target:symbies
				}
				last_created_pop = {
					add_modifier = {
						modifier = "pop_recently_conquered"
						days = 3600
					}
				}
			}
			planet.owner = {
				set_country_flag = symbie_pop_acquired
			}
		}
		if = {
			limit = { event_target:pki_player = { NOT = { has_country_flag = lauranaise_pop_acquired } } }
			while = {
				count = 4
				create_pop = {
					species = event_target:lauranaise
				}
				last_created_pop = {
					add_modifier = {
						modifier = "pop_recently_conquered"
						days = 3600
					}
				}
			}
			planet.owner = {
				set_country_flag = lauranaise_pop_acquired
			}
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOT = { has_deposit = d_grand_kronk_quarry } } }
			add_deposit = d_grand_kronk_quarry
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOT = { has_deposit = d_ezic_farmland } } }
			add_deposit = d_ezic_farmland
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOT = { has_deposit = d_mercurian_plains } } }
			add_deposit = d_mercurian_plains
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOT = { has_deposit = d_yinjite_sea_mines } } }
			add_deposit = d_yinjite_sea_mines
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOT = { has_deposit = d_laurandar_shores } } }
			add_deposit = d_laurandar_shores
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOT = { has_deposit = d_propanian_mines } } }
			add_deposit = d_propanian_mines
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOT = { has_deposit = d_magnetic_puffy } } }
			add_deposit = d_magnetic_puffy
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOT = { has_deposit = d_cookian_steppes_mining } } }
			add_deposit = d_cookian_steppes_mining
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOR = { has_deposit = d_altarian_jungle has_deposit = d_altarian_island } } }
			add_deposit = d_altarian_jungle
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOR = { has_deposit = d_manglarian_junkyard has_deposit = d_restored_solak } } }
			add_deposit = d_manglarian_junkyard
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOR = { has_deposit = d_catspian_sea has_deposit = d_catspian_crystal_mines } } }
			add_deposit = d_catspian_sea
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOR = { has_deposit = d_northern_ice_cap has_deposit = d_polar_mineral_fields } } }
			add_deposit = d_northern_ice_cap
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOR = { has_deposit = d_southern_ice_cap has_deposit = d_antarctic_uranium_fields } } }
			add_deposit = d_southern_ice_cap
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOR = { has_deposit = d_meowriana_trench has_deposit = d_flusion_sea_temple } } }
			add_deposit = d_meowriana_trench
		}
		if = {
			limit = { event_target:pki_flusion_planet = { NOT = { has_deposit = d_solakian_factory } } }
			add_deposit = d_solakian_factory
		}
		remove_deposit = d_flunat
	}
	every_country = {
		limit = {
			OR = {
				is_country_type = flusion_nation
				is_country_type = flusion_coalition
			}
		}
		destroy_country = yes
	}
	set_global_flag = solakia_conquered
	set_global_flag = cookie_conquered
	set_global_flag = kronk_conquered
	set_global_flag = ravka_conquered
	set_global_flag = zousa_conquered
	set_global_flag = droog_conquered
	set_global_flag = ezic_conquered
	set_global_flag = mercuria_conquered
	set_global_flag = cyatianala_conquered
	set_global_flag = yinja_conquered
	set_global_flag = symbie_conquered
	set_global_flag = lauranaise_conquered
	set_country_flag = unified_flusion
	random_situation = {
		limit = {
			is_situation_type = situation_world_tension
		}
		destroy_situation = this
	}
}

player_flusion_annexed_solak = {
	add_deposit = d_annexed_region_solak
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_solak = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_solak
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

player_flusion_annexed_cookie = {
	add_deposit = d_annexed_region_cookie
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_cookie = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_cookie
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

player_flusion_annexed_kronk = {
	add_deposit = d_annexed_region_kronk
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_kronk = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_kronk
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

player_flusion_annexed_ravka = {
	add_deposit = d_annexed_region_ravka
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_ravka = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_ravka
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

player_flusion_annexed_zousa = {
	add_deposit = d_annexed_region_zousa
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_zousa = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_zousa
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

player_flusion_annexed_droog = {
	add_deposit = d_annexed_region_droog
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_droog = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_droog
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

player_flusion_annexed_ezic = {
	add_deposit = d_annexed_region_ezic
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_ezic = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_ezic
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

player_flusion_annexed_mercuria = {
	add_deposit = d_annexed_region_mercuria
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_mercuria = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_mercuria
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

player_flusion_annexed_cyatianala = {
	add_deposit = d_annexed_region_cyatianala
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_cyatianala = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_cyatianala
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

player_flusion_annexed_yinja = {
	add_deposit = d_annexed_region_yinja
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_yinja = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_yinja
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

player_flusion_annexed_symbie = {
	add_deposit = d_annexed_region_symbie
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_symbie = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_symbie
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

player_flusion_annexed_lauranaise = {
	add_deposit = d_annexed_region_lauranaise
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_lauranaise = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_lauranaise
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

player_flusion_annexed_haranian = {
	add_deposit = d_annexed_region_haranian
	random_owned_pop = {
		kill_pop = yes
	}
}

player_flusion_liberated_haranian = {
	while = {
		count = 10
		remove_deposit = d_annexed_region_haranian
	}
	
	while = {
		count = 2
		create_pop = {
			species = owner_main_species
		}
	}
}

pki_district_half = {
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $DISTRICT$
		}
		variable = $VARIABLE$
	}
	divide_variable = { which = $VARIABLE$ value = 2 }
	floor_variable = $VARIABLE$
	while = {
		count = $VARIABLE$
		remove_district = $DISTRICT$
	}
	clear_variable = $VARIABLE$
}

pki_district_var_set = {
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $DISTRICT$
		}
		variable = $VARIABLE$
	}
	divide_variable = { which = $VARIABLE$ value = 2 }
	floor_variable = $VARIABLE$
}

pki_district_convert = {
	while = {
		count = $VARIABLE$
		add_district = $DISTRICT$
	}
	clear_variable = $VARIABLE$
}

pki_spawn_warforge_fleet = {
	create_fleet = {
		name = "Katzenkriegsschmiedekanone"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_owner = $OWNER$
			if = {
				limit = {
					fromfrom = {
						space_owner = {
							NOT = {
								pki_is_katzenartig_imperium = yes
							}
						}
					}
				}
				set_owner = event_target:pki_warforge_country
			}
			create_ship = {
				name = "Katzenkriegsschmiedekanone"
				design = "Rhawn"
				upgradable = no
			}
			set_location = fromfrom
			set_fleet_flag = warforge_platform
		}
	}
	if = {
		limit = {
			space_owner = {
				pki_is_katzprotektorat = yes
			}
		}
		every_system_planet = {
			limit = {
				has_planet_flag = war_forge
			}
			add_modifier = {
				modifier = pki_warforge_in_orbit
				days = -1
			}
		}
	}
}

pki_spawn_defense_fleet = {
	create_fleet = {
		name = "Katzenplanetenverteidigung"
		settings = { spawn_debris = no }
		effect = {
			set_owner = root
			create_ship = {
				name = "Katzenplanetenverteidigung"
				random_existing_design = katzen_player_warforge_platform
				upgradable = yes
			}
			set_location = {
				target = prev
				distance = 10
				angle = @\[90*($NUMBER$ - 1) ]
			}
			set_fleet_flag = pki_platform_planet_@prev
			set_fleet_flag = pki_platform_$NUMBER$_@prev
		}
	}
}

pki_count_ships = {
	every_controlled_ship = {
		fleet = {
			set_variable = {
				which = pki_$SHIP$_count
				value = 0
			}
		}
		limit = {
			is_ship_size = $SHIP$
		}
		fleet = {
			change_variable = {
				which = pki_$SHIP$_count
				value = 1
			}
		}
	}
}

create_meowrines = {
	if = {
		limit = { planet_owner = { NOT = { has_country_flag = recruited_befreier } } }
		create_fleet = {
			name = "Legion Befreier"
			effect = {
				set_owner = prev.owner
				while = {
					count = 8
					create_army_transport = {
						army_type = meowrine_company
					}
				}
				set_location = {
					target = root
				}
			}
		}
		planet.owner = {
			set_country_flag = recruited_befreier
		}
	}
	else_if = {
		limit = { planet_owner = { NOT = { has_country_flag = recruited_purrgund } } }
		create_fleet = {
			name = "Reichslegion Purrgund"
			effect = {
				set_owner = prev.owner
				while = {
					count = 8
					create_army_transport = {
						army_type = meowrine_company
					}
				}
				set_location = {
					target = root
				}
			}
		}
		planet.owner = {
			set_country_flag = recruited_purrgund
		}
	}
	else_if = {
		limit = { planet_owner = { NOT = { has_country_flag = recruited_kattail } } }
		create_fleet = {
			name = "Reichslegion Kattail"
			effect = {
				set_owner = prev.owner
				while = {
					count = 8
					create_army_transport = {
						army_type = meowrine_company
					}
				}
				set_location = {
					target = root
				}
			}
		}
		planet.owner = {
			set_country_flag = recruited_kattail
		}
	}
	else_if = {
		limit = { planet_owner = { NOT = { has_country_flag = recruited_gloria } } }
		create_fleet = {
			name = "Reichslegion Gloria"
			effect = {
				set_owner = prev.owner
				while = {
					count = 8
					create_army_transport = {
						army_type = meowrine_company
					}
				}
				set_location = {
					target = root
				}
			}
		}
		planet.owner = {
			set_country_flag = recruited_gloria
		}
	}
	else_if = {
		limit = { planet_owner = { NOT = { has_country_flag = recruited_zerstorer } } }
		create_fleet = {
			name = "Legion Zerstörer"
			effect = {
				set_owner = prev.owner
				while = {
					count = 8
					create_army_transport = {
						army_type = meowrine_company
					}
				}
				set_location = {
					target = root
				}
			}
		}
		planet.owner = {
			set_country_flag = recruited_zerstorer
		}
	}
	else_if = {
		limit = { planet_owner = { NOT = { has_country_flag = recruited_verteidiger } } }
		create_fleet = {
			name = "Legion Verteidiger"
			effect = {
				set_owner = prev.owner
				while = {
					count = 8
					create_army_transport = {
						army_type = meowrine_company
					}
				}
				set_location = {
					target = root
				}
			}
		}
		planet.owner = {
			set_country_flag = recruited_verteidiger
		}
	}
	else_if = {
		limit = { planet_owner = { NOT = { has_country_flag = recruited_kettenbrecher } } }
		create_fleet = {
			name = "Legion Kettenbrecher"
			effect = {
				set_owner = prev.owner
				while = {
					count = 8
					create_army_transport = {
						army_type = meowrine_company
					}
				}
				set_location = {
					target = root
				}
			}
		}
		planet.owner = {
			set_country_flag = recruited_kettenbrecher
		}
	}
	else_if = {
		limit = { planet_owner = { NOT = { has_country_flag = recruited_unserblich } } } #misspelled but that's how they were named originally so I won't change it
		create_fleet = {
			name = "Legion Unserblich"
			effect = {
				set_owner = prev.owner
				while = {
					count = 8
					create_army_transport = {
						army_type = meowrine_company
					}
				}
				set_location = {
					target = root
				}
			}
		}
		planet.owner = {
			set_country_flag = recruited_unserblich
		}
	}
	else_if = {
		limit = { planet_owner = { NOT = { has_country_flag = recruited_wachter } } }
		create_fleet = {
			name = "Legion Wächter"
			effect = {
				set_owner = prev.owner
				while = {
					count = 8
					create_army_transport = {
						army_type = meowrine_company
					}
				}
				set_location = {
					target = root
				}
			}
		}
		planet.owner = {
			set_country_flag = recruited_wachter
		}
	}
	else = {
		create_fleet = {
			name = "Meowrine Legion"
			effect = {
				set_owner = prev.owner
				while = {
					count = 8
					create_army_transport = {
						army_type = meowrine_company
					}
				}
				set_location = {
					target = root
				}
			}
		}
	}
}

pki_increase_used_factories = {
	if = {
		limit = {
			check_variable = {
				which = pki_map_industry_select_mult
				value >= value:pki_job_industry_factories
			}
		}
		set_variable = {
			which = pki_used_industry
			value = value:pki_total_industry
		}
	}
	else = {
		change_variable = {
			which = pki_used_industry
			value = pki_map_industry_select_mult
		}
	}
}

pki_decrease_used_factories = {
	set_variable = {
		which = pki_negative_factories_check
		value = value:pki_used_factories_check }
	if = {
		limit = {
			check_variable = {
				which = pki_negative_factories_check
				value <= 0
			}
		}
		set_variable = {
			which = pki_used_industry
			value = 0
		}
	}
	else = {
		subtract_variable = {
			which = pki_used_industry
			value = pki_map_industry_select_mult
		}
	}
}